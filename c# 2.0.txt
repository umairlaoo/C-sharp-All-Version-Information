Sure, here are some of the major features of C# 2.0:

* **Generics:** Generics allow you to create code that can work with different types of data. This makes code more reusable and flexible.
* **Partial classes:** Partial classes allow you to split a class into multiple files. This can be useful for large classes or classes that are being developed by multiple people.
* **Anonymous methods:** Anonymous methods are anonymous functions that can be used to simplify code.
* **Nullable value types:** Nullable value types allow you to represent values that can be null. This can be useful for handling data that may be missing or invalid.
* **Iterators:** Iterators allow you to iterate over collections in a more efficient way.
* **Covariance and contravariance:** Covariance and contravariance allow you to specify the types that can be used as parameters and return values for delegates and generic methods.
* **Delegate inference:** Delegate inference allows the compiler to infer the type of a delegate from the type of its arguments.
* **Accessibility of property accessors:** The accessibility of property accessors can be set independently. This allows you to make properties more accessible to some parts of your code and less accessible to others.

These are just some of the major features of C# 2.0. C# has continued to evolve over the years, and it now has many more features. However, these are the basic features that make C# a powerful and versatile programming language.

I hope this helps!